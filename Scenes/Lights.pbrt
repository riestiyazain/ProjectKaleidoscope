# View from the XY plane (X is the horizontal, Y is the vertical, Z is the depth)
LookAt 0 0 1 # eye  [X,Y,Z] -- x = 0, y = 0, z = 10 (big numbers means going back and the small numbers means going forward)
       0 0 0  # look at point [X,Y,Z]
       0 1 0  # up vector [X,Y,Z] -- setting y to one makes it so that y is up and x is horizontal and z is depth
Camera "perspective" "float fov" 90

Sampler "halton" "integer pixelsamples" 128
Integrator "path"
Film "image" "string filename" "Outputs/lights.png"
     "integer xresolution" [400] "integer yresolution" [400]

WorldBegin

# uniform blue-ish illumination from all directions
#LightSource "infinite" "rgb L" [.4 .45 .5]

# approximate the sun
#LightSource "distant"  "point from" [ -30 40  100 ] "blackbody L" [3000 1.5]

LightSource "spot" "color I" [0 255 255] "point from" [0 0 -4] "point to" [0 1.8 -6] "float coneangle" [20]
# left side
LightSource "spot" "color I" [0 255 255] "point from" [3 0 -4] "point to" [0 0.2 -3] "float coneangle" [50]
# right side
LightSource "spot" "color I" [0 255 255] "point from" [-3 0 -4] "point to" [0 0.2 -3] "float coneangle" [50]
# top right side
LightSource "spot" "color I" [255 0 255] "point from" [-3 3 -4] "point to" [0 0.2 -3] "float coneangle" [50]
# top left side
LightSource "spot" "color I" [255 255 0] "point from" [3 3 -4] "point to" [0 0.2 -3] "float coneangle" [50]
# top side
LightSource "spot" "color I" [255 255 255] "point from" [0 3 -4] "point to" [0 0.2 -3] "float coneangle" [50]

AttributeBegin
    Material "glass"
    Translate 0 0.2 -3
    Shape "sphere" "float radius" [ .5 ] "rgb Kd" [ 0 1 0 ]
AttributeEnd

# background plane
AttributeBegin
  Material "metal" "rgb Kd" [ 1 1 1 ]
  Translate 0 1.8 -6
  Rotate 90 1 0 0
  Scale 3 3 3
  Shape "trianglemesh" "integer indices" [0 1 2 1 2 3] "point P" [-1 0 0  1 0 0  -1 0 1  1 0 1]
AttributeEnd

# bottom mirror
AttributeBegin
  Material "mirror" "rgb Kd" [ .9 .9 .9 ]
  Scale 2.5 2.5 2.5
  Translate -0.5 -0.2 -0.5
  Rotate 90 0 2 0
  Shape "trianglemesh" "integer indices" [0 1 2 1 2 3] "point P" [-1 0 0  1 0 0  -1 0 1  1 0 1]
AttributeEnd

# left mirror
AttributeBegin
Material "mirror" "rgb Kd" [ .9 .9 .9 ]
  Scale 2.5 2.5 2.5
  Translate -0.5 -0.2 -0.5
  Shape "trianglemesh" "integer indices" [0 1 2 1 2 3] "point P" [1 0 0  0 1 0  1 0 1  0 1 1]
AttributeEnd

# right mirror
AttributeBegin
Material "mirror" "rgb Kd" [ .9 .9 .9 ]
  Scale 2.5 2.5 2.5
  Translate 0.5 -0.2 -0.5
  Shape "trianglemesh" "integer indices" [0 1 2 1 2 3] "point P" [-1 0 0  0 1 0  -1 0 1  0 1 1]
AttributeEnd


################################
#FLOOR checkerboard  (XZ plane)#
################################

# AttributeBegin
#   Translate 0 -1 0 #translate checkerboard -1 in y
#   Texture "checks" "spectrum" "checkerboard"
#           "float uscale" [8] "float vscale" [8] #defines a 8 by 8 checkerboard
#           "rgb tex1" [.1 .1 .1] "rgb tex2" [.8 .8 .8] #defines color of squares in checkerboard
#   Material "matte" "texture Kd" "checks"

#   Shape "trianglemesh"

#   "integer indices" [0 1 3 1 2 3]
#   "point P" [-20 0 -20  -20 0 20   20 0 20   20 0 -20] # defines the 4 extreme points of checkerboard
#   "float st" [ 0 0   1 0    1 1   0 1 ]
# AttributeEnd

WorldEnd


